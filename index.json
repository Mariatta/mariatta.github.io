[{"categories":null,"contents":"Talk Abstract Python is one of the most popular programming language out there, and it is also an open source project. The Python community relies on contributions by volunteers, and you too can take part in this rewarding experience. Contributing to open source is not just about opening pull requests. In this talk, we‚Äôll go through the workflow of contributing to CPython repository, as well as other ways to contribute to the project, including documentation, triaging, and infrastructure.\nContact me (links below) if you\u0026rsquo;d like to hear this talk at your event.\nPresented at: IndyPy 2023 Reactions üëèüëè Thank you @mariatta for showing the #IndyPy community how to contribute to #Python! #opensource #developers Tonight\u0026#39;s recording will be available on @sixfeetup\u0026#39;s YouTube playlist soon: https://t.co/XBQt6oNcKd pic.twitter.com/eZXVBsVYcM\n\u0026mdash; IndyPy (@indypy) January 11, 2023 Videos IndyPy January 2023 Slide Deck ","date":"August 14, 2023","hero":"/posts/talks/contributing-to-python/indypy.jpeg","permalink":"https://mariatta.ca/posts/talks/contributing-to-python/","summary":"Talk Abstract Python is one of the most popular programming language out there, and it is also an open source project. The Python community relies on contributions by volunteers, and you too can take part in this rewarding experience. Contributing to open source is not just about opening pull requests. In this talk, we‚Äôll go through the workflow of contributing to CPython repository, as well as other ways to contribute to the project, including documentation, triaging, and infrastructure.","tags":["Public Speaking","Talks","Python","Community","Open Source"],"title":"Contributing to Python"},{"categories":null,"contents":"Talk Abstract One of the nicest things about Python community is the availability of mentors willing to help you. Various mentors have helped me navigate the open source community and help advanced my skills. I realized finding a mentor is not as easy as it seems, and it takes a lot of courage to reach out in the first place. And then, there is impostor syndrome, where one may feel like they don\u0026rsquo;t deserve the help. In this talk, I will provide advice about working with a mentor. Asking for help is not a failure.\nPresented At PyLadies Vancouver meetup 2017 PyCaribbean 2017 PyCon US 2017 PyCon Italy 2017 DjangoCon Europe 2017 Reactions @mariatta thank you for your speech, it was very inspiring. :-) #DialMForMentor #Pycon8\n\u0026mdash; Stefano Giraldi üíª (@etino) April 7, 2017 Even as experts, you may need help in new domains. You\u0026#39;re not stupid. \u0026quot;It is OK to ask for help.\u0026quot; @mariatta @DjangoConEurope #DialMForMentor\n\u0026mdash; Jan Gondol üá∏üá∞ üá∫üá¶ #StandWithUkraine (@jangondol) April 5, 2017 It\u0026#39;s never too late to watch @mariatta\u0026#39;s @pycon 2017 talk, Dial M For Mentor! https://t.co/kKEJwFC8gD\n\u0026mdash; Colleen from Canada (@colleenjhardie) July 20, 2017 I\u0026#39;m at @PyCon and @mariatta just got a standing ovation. Thanks to her 2017 is the year a woman joins the Python Core Dev team üéâ\n\u0026mdash; Jack Danger (@jackdanger) May 19, 2017 Standing ovation for @mariatta, the first Woman #Python Core Dev. pic.twitter.com/0VzlSaZAd2\n\u0026mdash; St√©phane üá™üá∫üêç üáßüá™ (@matrixise) May 19, 2017 Do you want to become a contributor to #python , in this case you should follow the talk of @mariatta !!! pic.twitter.com/9xhAES9OKD\n\u0026mdash; St√©phane üá™üá∫üêç üáßüá™ (@matrixise) May 19, 2017 \u0026quot;Dial M for Mentor\u0026quot;. A fantastic talk and standing ovation for @mariatta @pyladiesvan #PyCon2017 #CPython pic.twitter.com/4MW4RWatAu\n\u0026mdash; Demonware (@demonware) May 20, 2017 Videos PyCaribbean 2017 DjangoCon Europe 2017 PyCon US 2017 PyCon Italy 2017 Slide Deck ","date":"August 14, 2023","hero":"/posts/talks/dial-m-for-mentor/dialmformentor.jpg","permalink":"https://mariatta.ca/posts/talks/dial-m-for-mentor/","summary":"Talk Abstract One of the nicest things about Python community is the availability of mentors willing to help you. Various mentors have helped me navigate the open source community and help advanced my skills. I realized finding a mentor is not as easy as it seems, and it takes a lot of courage to reach out in the first place. And then, there is impostor syndrome, where one may feel like they don\u0026rsquo;t deserve the help.","tags":["Public Speaking","Talks","Mentorship","Community"],"title":"Dial M For Mentor"},{"categories":null,"contents":"Talk Abstract Managing a large open source project like CPython is no easy task. Learn how the Python core team automated their GitHub workflow with bots, making it easier for maintainers and contributors to collaborate together. Even if you‚Äôre not managing a large project, you can still build your own bot! Hear some ideas on what you can automate on GitHub and personalize your bot based on your own workflow. All you need is Python. Don‚Äôt be a robot; build the bot.\nPresented At DjangoCon US 2018 GitHub Universe 2019 PyCon US 2019 Reactions @mariatta sharing how learning and experimenting results in helpful tools like miss-islington. #djangocon #python pic.twitter.com/GDOnouVuug\n\u0026mdash; Carol Willing (@WillingCarol) October 17, 2018 Post #djangocon and all I really want to write are GitHub bots thanks to @mariatta\u0026#39;s wonderful keynote. Ironically, today was not the best day to attempt that, but here tutorial is üíØ - https://t.co/b4bOafkRK9\n\u0026mdash; ‚ú® Jeff Triplett ‚ú® (@webology) October 23, 2018 I have a feeling everyone is going to show up to sprints tomorrow with a new bot. Great presentation @mariatta #DjangoCon\n\u0026mdash; ‚ñà‚ñà‚ñà‚ñà‚ñà [redacted] (@vincesalvino) October 17, 2018 I loved this one! @mariatta has a bot to tell you she\u0026#39;s not available to contribute to OSS until November! Pretty awesome üëèüëèüëèüëè #DjangoCon pic.twitter.com/8XCeMhouD7\n\u0026mdash; Anna Makarudze (@amakarudze) October 17, 2018 Videos DjangoCon US 2018 PyCon US 2019 GitHub Universe 2019 Slide Deck ","date":"August 14, 2023","hero":"/posts/talks/dont-be-a-robot-build-the-bot/djangocon2018.jpeg","permalink":"https://mariatta.ca/posts/talks/dont-be-a-robot-build-the-bot/","summary":"Talk Abstract Managing a large open source project like CPython is no easy task. Learn how the Python core team automated their GitHub workflow with bots, making it easier for maintainers and contributors to collaborate together. Even if you‚Äôre not managing a large project, you can still build your own bot! Hear some ideas on what you can automate on GitHub and personalize your bot based on your own workflow. All you need is Python.","tags":["Public Speaking","Talks","Python","Bots"],"title":"Don't Be a Robot; Build The Bot!"},{"categories":null,"contents":"Talk Abstract Having unit tests and continuous integration (CI) as part of your development are considered best practises. But how do these things work? In this talk, we will cover the benefits of writing unit tests and how to get started with it in Python. Then, we\u0026rsquo;ll step it up running tests as part CI. And that\u0026rsquo;s not all! CI is not just about running tests, but for other things as well, like code quality checks, and even building and generating documentation.\nContact me (links below) if you\u0026rsquo;d like to hear this talk at your event.\nPresented At PyOhio 2022 Data Umbrella #36 Videos Data Umbrella PyOhio 2022 Slide Deck ","date":"August 14, 2023","hero":"/posts/talks/intro_to_unit_test_and_ci/dataumbrella.jpeg","permalink":"https://mariatta.ca/posts/talks/intro_to_unit_test_and_ci/","summary":"Talk Abstract Having unit tests and continuous integration (CI) as part of your development are considered best practises. But how do these things work? In this talk, we will cover the benefits of writing unit tests and how to get started with it in Python. Then, we\u0026rsquo;ll step it up running tests as part CI. And that\u0026rsquo;s not all! CI is not just about running tests, but for other things as well, like code quality checks, and even building and generating documentation.","tags":["Public Speaking","Talks","Python","Workflow"],"title":"Intro to Unit Testing and Continuous Integration"},{"categories":null,"contents":"Talk Abstract Code review is like a buzzword in the programming world. Developers often talk about how important it is. But what really happens during code review? What do you achieve out of it? How can we learn during code review? This talk will present ideas of what should be the goals of a code review, and how can developers learn during code review process.\nPresented At VanPyDay 2016 DjangoCon US 2016 Videos DjangoCon US 2016 ","date":"August 14, 2023","hero":"/posts/talks/making-the-most-out-of-code-reviews/djangocon2016.jpg","permalink":"https://mariatta.ca/posts/talks/making-the-most-out-of-code-reviews/","summary":"Talk Abstract Code review is like a buzzword in the programming world. Developers often talk about how important it is. But what really happens during code review? What do you achieve out of it? How can we learn during code review? This talk will present ideas of what should be the goals of a code review, and how can developers learn during code review process.\nPresented At VanPyDay 2016 DjangoCon US 2016 Videos DjangoCon US 2016 ","tags":["Public Speaking","Talks","Workflow"],"title":"Making The Most out of Code Reviews"},{"categories":null,"contents":"Talk Abstract I consider myself relatively new to the open source world; my first open source contribution was in summer of 2016. Pretty soon I found myself being given commit rights to other people‚Äôs open source projects. Being a new open source maintainer brings a set of unique challenges that I was not fully prepared for. In this talk, I will share my journey and the things I‚Äôve learned along the way, and some advice for other aspiring open source maintainers and contributors.\nContact me (links below) if you\u0026rsquo;d like to hear this talk at your event.\nPresented At PyGotham 2020 PyCon AU 2020 PyCon Taiwan 2020 SeaGL 2020 PyCon BY 2021 PyCon US 2021 PyCon Indonesia 2021 Reactions @mariatta Loved this talk! Your boldness is truly inspiring \u0026lt;3\n\u0026mdash; Lucy Voigt (@pagerbooty) November 13, 2020 #pycontw2020 Day 2 Keynote by @mariatta: \u0026quot;Oops! I Became an Open Source Maintainer\u0026quot;\nI love that quote by @pwang (who coincidentally also gave the Keynote yesterday at @PyConTW)! pic.twitter.com/2nwaz6sz8j\n\u0026mdash; Ong Chin Hwee üêº (@ongchinhwee) September 6, 2020 Sometimes it is easy to forget that just as recently as 2015 there were NO women in the CPython core team.@mariatta\u0026#39;s talk \u0026quot;Oops! I Became an Open Source Maintainer!\u0026quot; reminds us that PyCons around the world play a crucial role in growing and diversifying our community. üíó\n\u0026mdash; PyCon US (@pycon) May 14, 2021 @mariatta I just watched \u0026quot;Oops! I Became an Open Source Maintainer\u0026quot; from PyConline AU. It was cool to see your story and how you got involved in the community and eventually reached out and gained maintainer status. Thanks for sharing!\n\u0026mdash; Sarah Withee #BLM üá∫üá¶ (@geekygirlsarah) February 28, 2021 Videos PyGotham 2020 PyCon AU 2020 PyCon Taiwan 2020 PyCon Indonesia 2021 PyCon US 2021 Slide Deck ","date":"August 14, 2023","hero":"/posts/talks/oops-i-became-an-open-source-maintainer/pygotham.jpeg","permalink":"https://mariatta.ca/posts/talks/oops-i-became-an-open-source-maintainer/","summary":"Talk Abstract I consider myself relatively new to the open source world; my first open source contribution was in summer of 2016. Pretty soon I found myself being given commit rights to other people‚Äôs open source projects. Being a new open source maintainer brings a set of unique challenges that I was not fully prepared for. In this talk, I will share my journey and the things I‚Äôve learned along the way, and some advice for other aspiring open source maintainers and contributors.","tags":["Public Speaking","Talks","Python","Community","Open Source"],"title":"Oops! I Became an Open Source Maintainer! üò±"},{"categories":null,"contents":"Talk Abstract If you use Python, chances are you\u0026rsquo;ve heard of PEP 8, the Python style guide.\nBut do you know what PEPs really are? PEPs are more than just a style guide. A PEP stands for Python Enhancement Proposal. It\u0026rsquo;s a proposal documentation for when you want to change the Python programming language in a big way, for example when you want to change the syntax of Python. Think of the addition of f-strings, the walrus operator, or the ExceptionGroup, those changes all started with a PEP.\nLet\u0026rsquo;s have a PEP talk, where you can learn about the PEP process, what needs a PEP and what doesn\u0026rsquo;t, and how you as community members can take part.\nContact me (links below) if you\u0026rsquo;d like to hear this talk at your event.\nView this post on Instagram A post shared by Mariatta Wijaya (@mariatta81)\nPresented At North Bay Python 2023 PyGotham 2023 Videos North Bay Python 2023 Slide Deck Intended Audience This is aimed for newcomers and beginners of Python, who may have only heard of PEP 8 and not so much of other PEPs. I will cover what PEPs really are, the purpose, examples of PEPs, and how community member can participate if they want to.\nTalk Outline What\u0026rsquo;s a PEP (\u0026lt; 5 minutes)\nYou know of PEP 8 But there are other PEPs A PEP is a proposal: it\u0026rsquo;s a documentation for changes to Python What kind of Changes Need a PEP? (5 minutes)\nIf you want to add new syntax Example: f-strings, ExceptionGroup, the \u0026ldquo;walrus\u0026rdquo; operator Other things that have a PEP (5 minutes)\nRelease schedule Governance Informational (Style Guide) PEP lifecycle (10 minutes)\nHow it works: start with discussing it in a public forum (like Discourse or the Python Language Summit) If there is consensus and agreement of the idea, then a PEP will need to be written Steering Council review and approve (or reject) the PEP Once approved, the feature can go to the next Python release After the feature has been done: PEP becomes final. But PEP is not a documentation: you should read the Python docs after PEP has become final All of these can take months, even years Your role (5 minutes)\nIf you don\u0026rsquo;t agree with a proposal (if it cause you hardship in the way you use Python), the best way to voice your concern is during PEP discussion period, before the SC approval, and before the release of Python. Sometimes new feature cause breakage, do test your codebase against the Python main branch, or alpha versions. Keep up to date by following the Discourse forum, or the PEPs repo ","date":"August 14, 2023","hero":"/posts/talks/pep_talk/nbpy2023.jpeg","permalink":"https://mariatta.ca/posts/talks/pep_talk/","summary":"Talk Abstract If you use Python, chances are you\u0026rsquo;ve heard of PEP 8, the Python style guide.\nBut do you know what PEPs really are? PEPs are more than just a style guide. A PEP stands for Python Enhancement Proposal. It\u0026rsquo;s a proposal documentation for when you want to change the Python programming language in a big way, for example when you want to change the syntax of Python. Think of the addition of f-strings, the walrus operator, or the ExceptionGroup, those changes all started with a PEP.","tags":["Public Speaking","Talks","Python","Community","Open Source"],"title":"PEP Talk"},{"categories":null,"contents":"Speaker Bio Mariatta is a Python core developer where she focuses on improving the workflow and documentation. She is active in the Python community as an advisor for the Global PyLadies, co-founder of PyCascades, and is currently chairing PyCon US conference.\nFor her contributions to the Python and community, she received the PSF Community Service Award in 2018 and Google Open Source Peer Bonus Award in 2017 and 2020.\nHeadshot You can use the following headshot as my speaker profile. It is also available for download on https://github.com/mariatta.png\n","date":"August 14, 2023","hero":"/posts/speaker_bio/icecreamselfiecollection.png","permalink":"https://mariatta.ca/posts/speaker_bio/","summary":"Speaker Bio Mariatta is a Python core developer where she focuses on improving the workflow and documentation. She is active in the Python community as an advisor for the Global PyLadies, co-founder of PyCascades, and is currently chairing PyCon US conference.\nFor her contributions to the Python and community, she received the PSF Community Service Award in 2018 and Google Open Source Peer Bonus Award in 2017 and 2020.\nHeadshot You can use the following headshot as my speaker profile.","tags":["Public Speaking"],"title":"Speaker Bio"},{"categories":null,"contents":"There\u0026rsquo;s an API For That! Talk Abstract You might have seen bots like GitHub bots, Discord bots, Slack bots. How do these bots work? There\u0026rsquo;s an API for that! You can use third-party APIs to build web apps and automations, including bots. Come learn the best practices on how to work with APIs using Python.\nContact me (links below) if you\u0026rsquo;d like to hear this talk at your event.\nPresented At WWCode BlockDataPy Dev Summit 2023 PyCon Colombia 2020 Reactions Watch the video Mariatta Wijaya @mariatta, She was one of our keynote speakers at Pycon Colombia 2022, we hope you enjoy it as much as we did\nWatch and share!https://t.co/fycWIZwKzS#PyConColombia #PyCon #speaker #python #keynote #Conference pic.twitter.com/vQib5VDUML\n\u0026mdash; PyCon Colombia (@pyconcolombia) August 1, 2022 Videos PyCon Colombia 2020 Slide Deck ","date":"August 14, 2023","hero":"/posts/talks/theres-an-api-for-that/theres_api_for_that.jpg","permalink":"https://mariatta.ca/posts/talks/theres-an-api-for-that/","summary":"There\u0026rsquo;s an API For That! Talk Abstract You might have seen bots like GitHub bots, Discord bots, Slack bots. How do these bots work? There\u0026rsquo;s an API for that! You can use third-party APIs to build web apps and automations, including bots. Come learn the best practices on how to work with APIs using Python.\nContact me (links below) if you\u0026rsquo;d like to hear this talk at your event.\nPresented At WWCode BlockDataPy Dev Summit 2023 PyCon Colombia 2020 Reactions Watch the video Mariatta Wijaya @mariatta, She was one of our keynote speakers at Pycon Colombia 2022, we hope you enjoy it as much as we did","tags":["Public Speaking","Talks","Python","Bots","Open Source"],"title":"There's an API for That!"},{"categories":null,"contents":"Talk Abstract How do you become a Python core developer? How can I become one? What is it like to be a Python core developer?\nThese are the questions I often receive ever since I became a Python core developer a year ago. Contributing to Python is a long journey that does not end when one earns the commit privilege. There are responsibilities to bear and expectations to live up to.\nIn the past year, I\u0026rsquo;ve been learning more about what it really means to be a Python core developer. Let me share all of that with you.\nPresented At PyCon US 2018 North Bay Python 2018 Reactions Yes you are amazing @mariatta thank you for your work, your contributions, for sharing your story. Our #python community is better because of people like you. #pycon2018 pic.twitter.com/84FvYr4dSq\n\u0026mdash; at üåé @LorenaNicole@mastodon.social (@loooorenanicole) May 12, 2018 @mariatta - What is a Python Core Developer? - PyCon 2018 https://t.co/e0bxAohuso via @YouTube She inspires me!!!!\nThanks for sharing with us! I hope that with PyLadies the numbers have improved :)\n\u0026mdash; Lupe | imilla en transici√≥n a warmi üòÅ üáßüá¥üá∫üá≤ (@luucamay_) July 26, 2020 @mariatta - What is a Python Core Developer? - PyCon 2018 https://t.co/f42yIc1w03 via @YouTube Great talk on getting involved in python community and a call to action at the end re trying to foster more diversity in the contributor community. I hope to be a future typo fixer too!\n\u0026mdash; Jason Wattier (@jmwatt3) June 3, 2018 üëèüèºü§© it is always so encouraging and inspiring to see core members of #pyhton caring so much about the community and willing to make a difference for the better. Thanks @mariatta for being so awesome, humble, and inspiring #PyCon2018 pic.twitter.com/hRvfE3UGuF\n\u0026mdash; ‚ú®Tania Allard üíÄüá≤üáΩ üá¨üáß (@ixek) May 12, 2018 Excellent tips from @mariatta on being a good Python community member at #nbpy pic.twitter.com/o9fhQmX6Az\n\u0026mdash; Nina Zakharenko (@nnja) November 3, 2018 We‚Äôre off for @northbaypython day 1 with @mariatta delivering a fantastic keynote on Python, its community, and her journey as a core developer on the project! #nbpy pic.twitter.com/lucSytd040\n\u0026mdash; üè≥Ô∏è‚Äçüåà Sam Kimbrel | @skimbrel@tech.lgbt (@skimbrel) November 3, 2018 I‚Äôm watching @mariatta give a lovely talk about being a Python core developer, and particularly the challenges of helping people contribute when core devs are a tiny fraction of the overall community #nbpy\n\u0026mdash; Audrey Eschright (@ameschright) November 3, 2018 Videos Slide Deck ","date":"August 14, 2023","hero":"/posts/talks/what-is-a-python-core-dev/nbpy2018.jpg","permalink":"https://mariatta.ca/posts/talks/what-is-a-python-core-dev/","summary":"Talk Abstract How do you become a Python core developer? How can I become one? What is it like to be a Python core developer?\nThese are the questions I often receive ever since I became a Python core developer a year ago. Contributing to Python is a long journey that does not end when one earns the commit privilege. There are responsibilities to bear and expectations to live up to.","tags":["Public Speaking","Talks","Python","Community","Open Source"],"title":"What Is a Python Core Developer?"}]