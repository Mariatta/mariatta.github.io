<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Talks on Mariatta</title><link>https://mariatta.ca/tags/talks/</link><description>Recent content in Talks on Mariatta</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 29 Jul 2023 00:00:00 +0600</lastBuildDate><atom:link href="https://mariatta.ca/tags/talks/index.xml" rel="self" type="application/rss+xml"/><item><title>PEP Talk</title><link>https://mariatta.ca/posts/talks/pep_talk/</link><pubDate>Sat, 29 Jul 2023 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/pep_talk/</guid><description>&lt;h2 id="talk-abstract">Talk Abstract&lt;/h2>
&lt;p>If you use Python, chances are you&amp;rsquo;ve heard of PEP 8, the Python style guide.&lt;/p>
&lt;p>But do you know what PEPs really are? PEPs are more than just a style guide. A PEP stands for Python Enhancement Proposal. It&amp;rsquo;s a proposal documentation for when you want to change the Python programming language in a big way, for example when you want to change the syntax of Python. Think of the addition of f-strings, the walrus operator, or the ExceptionGroup, those changes all started with a PEP.&lt;/p></description></item><item><title>There's an API for That!</title><link>https://mariatta.ca/posts/talks/theres-an-api-for-that/</link><pubDate>Thu, 27 Jul 2023 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/theres-an-api-for-that/</guid><description>&lt;h1 id="theres-an-api-for-that">There&amp;rsquo;s an API For That!&lt;/h1>
&lt;h2 id="talk-abstract">Talk Abstract&lt;/h2>
&lt;p>You might have seen bots like GitHub bots, Discord bots, Slack bots. How do these bots work? There&amp;rsquo;s an API for that! You can use third-party APIs to build web apps and automations, including bots. Come learn the best practices on how to work with APIs using Python.&lt;/p>
&lt;p>&lt;strong>Contact me (links below) if you&amp;rsquo;d like to hear this talk at your event.&lt;/strong>&lt;/p>
&lt;h2 id="presented-at">Presented At&lt;/h2>
&lt;ul>
&lt;li>WWCode BlockDataPy Dev Summit 2023&lt;/li>
&lt;li>PyCon Colombia 2020&lt;/li>
&lt;/ul>
&lt;h2 id="reactions">Reactions&lt;/h2>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Watch the video Mariatta Wijaya &lt;a href="https://twitter.com/mariatta?ref_src=twsrc%5Etfw">@mariatta&lt;/a>, She was one of our keynote speakers at Pycon Colombia 2022, we hope you enjoy it as much as we did&lt;br>&lt;br>Watch and share!&lt;a href="https://t.co/fycWIZwKzS">https://t.co/fycWIZwKzS&lt;/a>&lt;a href="https://twitter.com/hashtag/PyConColombia?src=hash&amp;amp;ref_src=twsrc%5Etfw">#PyConColombia&lt;/a> &lt;a href="https://twitter.com/hashtag/PyCon?src=hash&amp;amp;ref_src=twsrc%5Etfw">#PyCon&lt;/a> &lt;a href="https://twitter.com/hashtag/speaker?src=hash&amp;amp;ref_src=twsrc%5Etfw">#speaker&lt;/a> &lt;a href="https://twitter.com/hashtag/python?src=hash&amp;amp;ref_src=twsrc%5Etfw">#python&lt;/a> &lt;a href="https://twitter.com/hashtag/keynote?src=hash&amp;amp;ref_src=twsrc%5Etfw">#keynote&lt;/a> &lt;a href="https://twitter.com/hashtag/Conference?src=hash&amp;amp;ref_src=twsrc%5Etfw">#Conference&lt;/a> &lt;a href="https://t.co/vQib5VDUML">pic.twitter.com/vQib5VDUML&lt;/a>&lt;/p></description></item><item><title>Contributing to Python</title><link>https://mariatta.ca/posts/talks/contributing-to-python/</link><pubDate>Wed, 11 Jan 2023 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/contributing-to-python/</guid><description>&lt;h2 id="talk-abstract">Talk Abstract&lt;/h2>
&lt;p>Python is one of the most popular programming language out there, and it is also an open source project. The Python community relies on contributions by volunteers, and you too can take part in this rewarding experience. Contributing to open source is not just about opening pull requests. In this talk, weâ€™ll go through the workflow of contributing to CPython repository, as well as other ways to contribute to the project, including documentation, triaging, and infrastructure.&lt;/p></description></item><item><title>Intro to Unit Testing and Continuous Integration</title><link>https://mariatta.ca/posts/talks/intro_to_unit_test_and_ci/</link><pubDate>Sat, 30 Jul 2022 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/intro_to_unit_test_and_ci/</guid><description>&lt;h2 id="talk-abstract">Talk Abstract&lt;/h2>
&lt;p>Having unit tests and continuous integration (CI) as part of your development are considered best practises. But how do these things work? In this talk, we will cover the benefits of writing unit tests and how to get started with it in Python. Then, we&amp;rsquo;ll step it up running tests as part CI. And that&amp;rsquo;s not all! CI is not just about running tests, but for other things as well, like code quality checks, and even building and generating documentation.&lt;/p></description></item><item><title>Oops! I Became an Open Source Maintainer! ðŸ˜±</title><link>https://mariatta.ca/posts/talks/oops-i-became-an-open-source-maintainer/</link><pubDate>Fri, 14 May 2021 17:09:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/oops-i-became-an-open-source-maintainer/</guid><description>&lt;h2 id="talk-abstract">Talk Abstract&lt;/h2>
&lt;p>I consider myself relatively new to the open source world; my first open source contribution was in summer of 2016. Pretty soon I found myself being given commit rights to other peopleâ€™s open source projects. Being a new open source maintainer brings a set of unique challenges that I was not fully prepared for. In this talk, I will share my journey and the things Iâ€™ve learned along the way, and some advice for other aspiring open source maintainers and contributors.&lt;/p></description></item><item><title>What Is a Python Core Developer?</title><link>https://mariatta.ca/posts/talks/what-is-a-python-core-dev/</link><pubDate>Sat, 03 Nov 2018 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/what-is-a-python-core-dev/</guid><description>&lt;h2 id="talk-abstract">Talk Abstract&lt;/h2>
&lt;p>How do you become a Python core developer? How can I become one? What is it like to be a Python core developer?&lt;/p>
&lt;p>These are the questions I often receive ever since I became a Python core developer a year ago. Contributing to Python is a long journey that does not end when one earns the commit privilege. There are responsibilities to bear and expectations to live up to.&lt;/p></description></item><item><title>Don't Be a Robot; Build The Bot!</title><link>https://mariatta.ca/posts/talks/dont-be-a-robot-build-the-bot/</link><pubDate>Wed, 17 Oct 2018 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/dont-be-a-robot-build-the-bot/</guid><description>&lt;h2 id="talk-abstract">Talk Abstract&lt;/h2>
&lt;p>Managing a large open source project like CPython is no easy task.
Learn how the Python core team automated their GitHub workflow with bots, making it easier for maintainers and contributors to collaborate together.
Even if youâ€™re not managing a large project, you can still build your own bot! Hear some ideas on what you can automate on GitHub and personalize your
bot based on your own workflow. All you need is Python. Donâ€™t be a robot; build the bot.&lt;/p></description></item><item><title>Dial M For Mentor</title><link>https://mariatta.ca/posts/talks/dial-m-for-mentor/</link><pubDate>Fri, 19 May 2017 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/dial-m-for-mentor/</guid><description>&lt;h2 id="talk-abstract">Talk Abstract&lt;/h2>
&lt;p>One of the nicest things about Python community is the availability of mentors willing to help you.
Various mentors have helped me navigate the open source community and help advanced my skills.
I realized finding a mentor is not as easy as it seems, and it takes a lot of courage to reach out
in the first place. And then, there is impostor syndrome, where one may feel like they don&amp;rsquo;t deserve the help.
In this talk, I will provide advice about working with a mentor.
Asking for help is not a failure.&lt;/p></description></item><item><title>Making The Most out of Code Reviews</title><link>https://mariatta.ca/posts/talks/making-the-most-out-of-code-reviews/</link><pubDate>Wed, 10 Aug 2016 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/making-the-most-out-of-code-reviews/</guid><description>&lt;h2 id="talk-abstract">Talk Abstract&lt;/h2>
&lt;p>Code review is like a buzzword in the programming world. Developers often talk about how important it is.
But what really happens during code review? What do you achieve out of it? How can we learn during code review?
This talk will present ideas of what should be the goals of a code review, and how can developers learn during code review process.&lt;/p>
&lt;h2 id="presented-at">Presented At&lt;/h2>
&lt;ul>
&lt;li>VanPyDay 2016&lt;/li>
&lt;li>DjangoCon US 2016&lt;/li>
&lt;/ul>
&lt;h2 id="videos">Videos&lt;/h2>
&lt;h3 id="djangocon-us-2016">DjangoCon US 2016&lt;/h3>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/QgwUvaNjlRM?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video">&lt;/iframe>
&lt;/div></description></item></channel></rss>