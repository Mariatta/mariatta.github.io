<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Mariatta</title><link>https://mariatta.ca/tags/python/</link><description>Recent content in Python on Mariatta</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 28 Aug 2024 00:00:00 -0800</lastBuildDate><atom:link href="https://mariatta.ca/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>PyLadiesCon Speaker Support</title><link>https://mariatta.ca/posts/pyladiescon-speaker-support/</link><pubDate>Wed, 28 Aug 2024 00:00:00 -0800</pubDate><guid>https://mariatta.ca/posts/pyladiescon-speaker-support/</guid><description>Speak at PyLadiesCon PyLadiesCon CFP is now open until September 15, 2024, and I would love to support you in submitting your talk.
Perhaps you never gave a talk before, and unsure if speaking for you? Perhaps you want to give a talk, but don&amp;rsquo;t think you&amp;rsquo;re experienced enough? Perhaps you have a talk idea, but don&amp;rsquo;t know how to turn it into a proposal? Perhaps you tried submitting talks before, but always get rejected and feeling discouraged?</description></item><item><title>PEP Talk</title><link>https://mariatta.ca/posts/talks/pep_talk/</link><pubDate>Sat, 29 Jul 2023 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/pep_talk/</guid><description>Talk Abstract If you use Python, chances are you&amp;rsquo;ve heard of PEP 8, the Python style guide.
But do you know what PEPs really are? PEPs are more than just a style guide. A PEP stands for Python Enhancement Proposal. It&amp;rsquo;s a proposal documentation for when you want to change the Python programming language in a big way, for example when you want to change the syntax of Python. Think of the addition of f-strings, the walrus operator, or the ExceptionGroup, those changes all started with a PEP.</description></item><item><title>There's an API for That!</title><link>https://mariatta.ca/posts/talks/theres-an-api-for-that/</link><pubDate>Thu, 27 Jul 2023 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/theres-an-api-for-that/</guid><description>There&amp;rsquo;s an API For That! Talk Abstract You might have seen bots like GitHub bots, Discord bots, Slack bots. How do these bots work? There&amp;rsquo;s an API for that! You can use third-party APIs to build web apps and automations, including bots. Come learn the best practices on how to work with APIs using Python.
Contact me (links below) if you&amp;rsquo;d like to hear this talk at your event.
Presented At WWCode BlockDataPy Dev Summit 2023 PyCon Colombia 2020 Reactions Watch the video Mariatta Wijaya @mariatta, She was one of our keynote speakers at Pycon Colombia 2022, we hope you enjoy it as much as we did</description></item><item><title>Contributing to Python</title><link>https://mariatta.ca/posts/talks/contributing-to-python/</link><pubDate>Wed, 11 Jan 2023 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/contributing-to-python/</guid><description>Talk Abstract Python is one of the most popular programming language out there, and it is also an open source project. The Python community relies on contributions by volunteers, and you too can take part in this rewarding experience. Contributing to open source is not just about opening pull requests. In this talk, weâ€™ll go through the workflow of contributing to CPython repository, as well as other ways to contribute to the project, including documentation, triaging, and infrastructure.</description></item><item><title>Intro to Unit Testing and Continuous Integration</title><link>https://mariatta.ca/posts/talks/intro_to_unit_test_and_ci/</link><pubDate>Sat, 30 Jul 2022 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/intro_to_unit_test_and_ci/</guid><description>Talk Abstract Having unit tests and continuous integration (CI) as part of your development are considered best practises. But how do these things work? In this talk, we will cover the benefits of writing unit tests and how to get started with it in Python. Then, we&amp;rsquo;ll step it up running tests as part CI. And that&amp;rsquo;s not all! CI is not just about running tests, but for other things as well, like code quality checks, and even building and generating documentation.</description></item><item><title>Oops! I Became an Open Source Maintainer! ðŸ˜±</title><link>https://mariatta.ca/posts/talks/oops-i-became-an-open-source-maintainer/</link><pubDate>Fri, 14 May 2021 17:09:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/oops-i-became-an-open-source-maintainer/</guid><description>Talk Abstract I consider myself relatively new to the open source world; my first open source contribution was in summer of 2016. Pretty soon I found myself being given commit rights to other peopleâ€™s open source projects. Being a new open source maintainer brings a set of unique challenges that I was not fully prepared for. In this talk, I will share my journey and the things Iâ€™ve learned along the way, and some advice for other aspiring open source maintainers and contributors.</description></item><item><title>What Is a Python Core Developer?</title><link>https://mariatta.ca/posts/talks/what-is-a-python-core-dev/</link><pubDate>Sat, 03 Nov 2018 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/what-is-a-python-core-dev/</guid><description>Talk Abstract How do you become a Python core developer? How can I become one? What is it like to be a Python core developer?
These are the questions I often receive ever since I became a Python core developer a year ago. Contributing to Python is a long journey that does not end when one earns the commit privilege. There are responsibilities to bear and expectations to live up to.</description></item><item><title>Don't Be a Robot; Build The Bot!</title><link>https://mariatta.ca/posts/talks/dont-be-a-robot-build-the-bot/</link><pubDate>Wed, 17 Oct 2018 00:00:00 +0600</pubDate><guid>https://mariatta.ca/posts/talks/dont-be-a-robot-build-the-bot/</guid><description>Talk Abstract Managing a large open source project like CPython is no easy task. Learn how the Python core team automated their GitHub workflow with bots, making it easier for maintainers and contributors to collaborate together. Even if youâ€™re not managing a large project, you can still build your own bot! Hear some ideas on what you can automate on GitHub and personalize your bot based on your own workflow. All you need is Python.</description></item></channel></rss>